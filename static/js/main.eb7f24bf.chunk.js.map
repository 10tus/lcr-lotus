{"version":3,"sources":["components/HeroSection.js","components/Navigation.js","components/About.js","components/Result.js","components/How.js","components/Service.js","images/B1.svg","components/Footer.js","pages/index.js","components/NotFound.js","App.js","reportWebVitals.js","index.js"],"names":["HeroSection","className","to","smooth","duration","spy","exact","activeClass","offset","Navigation","useState","menuToggled","setToggled","style","fontSize","onClick","scroll","scrollToTop","type","color","size","About","id","Result","resJson","newwin","setWin","useEffect","document","getElementById","value","convertToText","ocr","yourwin","FailedCheckWin","Fragment","date","CheckWinTrue","win","resObj","txt","forEach","element","length","nxtElem","i","toString","rows","cols","readOnly","yournum","row","split","winNum","map","Number","rowVal","rowInt","temp","some","arr","includes","push","RecheckNumbers","trim","How","marginTop","position","paddingTop","controls","top","left","url","width","height","Service","state","src","crop","typeL","getDate","typeVal","croppedImageUrl","currBlob","resultObj","alert","loading","convertToBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","base64String","result","replace","repeat","onerror","error","onSelectFile","e","target","files","addEventListener","setState","onImageLoaded","image","imageRef","onCropComplete","makeClientCrop","onCropChange","formatDate","unconvertedDate","Date","dateArr","convertedMonth","getMonth","newDate","parseInt","triggerAlert","val","onSubmitClicked","a","REACT_APP_API_URL","process","preventDefault","val3","obj","test1","test2","test3","fetch","method","headers","body","JSON","stringify","then","response","json","data","getJsonObj","catch","failedLoad","this","getCroppedImg","object","fileName","canvas","createElement","scaleX","naturalWidth","scaleY","naturalHeight","getContext","drawImage","x","y","toBlob","blob","name","window","URL","revokeObjectURL","fileUrl","createObjectURL","autoComplete","htmlFor","onChange","item","aria-label","aria-hidden","accept","ruleOfThirds","onComplete","alt","maxWidth","Component","Footer","logo","href","Home","NotFound","marginRight","transform","App","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"2OA2BeA,EAzBK,WAClB,OACE,qBAAKC,UAAU,iCAAf,SACE,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,YAAd,2BACA,mBAAGA,UAAU,OAAb,sEAGA,cAAC,OAAD,CACEA,UAAU,iCACVC,GAAG,WACHC,QAAQ,EACRC,SAAU,IACVC,KAAK,EACLC,MAAM,OACNC,YAAY,SACZC,QAAS,GARX,+B,wBCyDOC,EA/DI,WAAO,IAAD,EACWC,oBAAS,GADpB,mBAChBC,EADgB,KACHC,EADG,KAGvB,OACE,qBAAKX,UAAW,yDAAhB,SACE,sBAAKA,UAAU,kBAAf,UACE,mBACEA,UAAU,mBACVY,MAAO,CAAEC,SAAU,UACnBC,QAASC,gBAAOC,YAHlB,iBAOA,wBACEhB,UAAU,6BACViB,KAAK,SACLH,QAAS,kBAAMH,GAAYD,IAH7B,SAKGA,EACC,cAAC,IAAD,CAAMQ,MAAM,QAAQC,KAAM,KAE1B,cAAC,IAAD,CAAGD,MAAM,QAAQC,KAAM,OAG3B,qBACEnB,WAAYU,EAAc,GAAK,QAAU,4BAD3C,SAGE,qBAAIV,UAAU,eAAd,UACE,6BACE,cAAC,OAAD,CACEA,UAAU,aACVC,GAAG,QACHC,QAAQ,EACRC,SAAU,IACVC,KAAK,EACLC,MAAM,OACNC,YAAY,SACZC,QAAS,GARX,qBAaF,oBAAIP,UAAU,WAAd,SACE,cAAC,OAAD,CACEA,UAAU,YACVC,GAAG,WACHC,QAAQ,EACRC,SAAU,IACVC,KAAK,EACLC,MAAM,OACNC,YAAY,SACZC,QAAS,GARX,kCCiBCa,G,MA9DD,WACZ,OACE,sBAAKpB,UAAU,iBAAiBqB,GAAG,QAAnC,UACE,oBAAIrB,UAAU,cAAd,iDACA,oBAAGA,UAAU,mBAAb,mEACwD,uBADxD,8FAMA,sBAAKA,UAAU,8BAAf,UACE,qBAAKA,UAAU,SAAf,SACE,sBAAKA,UAAU,wBAAf,UACE,qBAAKA,UAAU,cAAf,SACE,oBAAIA,UAAU,0BAAd,oBAEF,qBAAKA,UAAU,YAAf,SACE,mBAAGA,UAAU,qBAAb,oGAQN,qBAAKA,UAAU,SAAf,SACE,sBAAKA,UAAU,wBAAf,UACE,qBAAKA,UAAU,cAAf,SACE,oBAAIA,UAAU,0BAAd,sBAEF,qBAAKA,UAAU,YAAf,SACE,mBAAGA,UAAU,qBAAb,kFAON,qBAAKA,UAAU,SAAf,SACE,sBAAKA,UAAU,wBAAf,UACE,qBAAKA,UAAU,cAAf,SACE,oBAAIA,UAAU,0BAAd,yBAEF,qBAAKA,UAAU,YAAf,SACE,mBAAGA,UAAU,qBAAb,iGAQR,mBAAGA,UAAU,0BAAb,mR,0ECkESsB,G,MAtHA,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EACLd,mBAAS,MADJ,mBACvBe,EADuB,KACfC,EADe,KAG9BC,qBAAU,WACRC,SAASC,eAAe,iBAAiBC,MAAQC,EAAcP,EAAQQ,KACvEN,EAAOK,EAAcP,EAAQS,YAC5B,CAACT,EAAQQ,IAAKR,EAAQS,UAEzB,IAAMC,EAAiB,WACrB,OACE,cAAC,IAAMC,SAAP,UACE,oBAAGlC,UAAU,KAAb,UACE,sBAAMA,UAAU,sBAAhB,oBADF,6CAE6BuB,EAAQN,KAFrC,cAEsDM,EAAQY,KAF9D,2DASAC,EAAe,WACnB,OACE,8BACE,sBAAMpC,UAAU,UAAhB,8BADF,IACqDuB,EAAQc,IAD7D,sBAOEP,EAAgB,SAACQ,GACrB,IAAIC,EAAM,GAUV,OATAD,EAAOE,SAAQ,SAACC,GACS,IAAnBA,EAAQC,SAAcH,GAAO,QACjCE,EAAQD,SAAQ,SAACG,EAASC,GACpBA,EAAI,IAAMH,EAAQC,OAAQH,GAAOI,EAAQE,WACxCN,GAAOI,EAAQE,WAAa,OAEnCN,GAAO,QAGFA,GAsBT,OACE,uBAAMvC,UAAU,YAAhB,UACmB,QAAhBuB,EAAQc,IAAgB,cAACJ,EAAD,IAAqB,cAACG,EAAD,IAC9C,sBAAKpC,UAAU,MAAf,UACE,oBAAGA,UAAU,UAAb,UACE,sBAAMA,UAAU,KAAhB,yBADF,IAC2CuB,EAAQN,QAEnD,oBAAGjB,UAAU,SAAb,UACE,sBAAMA,UAAU,KAAhB,wBADF,IAC0CuB,EAAQY,WAGpD,sBAAKnC,UAAU,YAAf,UACE,sBAAKA,UAAU,oBAAf,UACE,8CACA,0BACEA,UAAU,eACVqB,GAAG,gBACHyB,KAAK,IACLC,KAAK,UAGT,sBAAK/C,UAAU,oBAAf,UACE,sDACA,0BACEgD,UAAQ,EACRhD,UAAU,eACVqB,GAAG,oBACHyB,KAAK,IACLC,KAAK,KACLlB,MAAOL,GAAkBM,EAAcP,EAAQS,iBAIrD,oBAAGhC,UAAU,KAAb,UACE,sBAAMA,UAAU,uBAAhB,qBADF,wOAOA,wBACEiB,KAAK,SACLjB,UAAU,kDACVc,QAAS,kBA9DQ,SAACmC,EAASZ,GAC/B,IAAIa,EAAMD,EAAQE,MAAM,MACpBC,EAASf,EAAIc,MAAM,KAAKE,IAAIC,QAC5Bf,EAAM,GACVW,EAAIV,SAAQ,SAACe,GACX,IAAIC,EAASD,EAAOJ,MAAM,KAAKE,IAAIC,QAC/BG,EAAO,GACXD,EAAOE,MAAK,SAACC,GACPP,EAAOQ,SAASD,IAClBF,EAAKI,KAAKF,MAGdpB,EAAIsB,KAAKJ,MAIXhC,EAAOK,EAAcS,IA+CfuB,CACEnC,SAASC,eAAe,iBAAiBC,MAAMkC,OAC/CxC,EAAQc,MANd,0B,iBClFS2B,EApBH,WACV,OACE,sBAAKhE,UAAU,iBAAiBY,MAAO,CAAEqD,UAAW,QAAU5C,GAAG,WAAjE,UACE,oBAAIrB,UAAU,cAAd,wBACA,mBAAGA,UAAU,mBAAb,6DAGA,qBAAKY,MAAO,CAAEsD,SAAU,WAAYC,WAAY,OAAhD,SACE,cAAC,IAAD,CACEC,UAAQ,EACRxD,MAAO,CAAEsD,SAAU,WAAYG,IAAK,IAAKC,KAAM,KAC/CC,IAAI,+BACJC,MAAM,OACNC,OAAO,eCRIC,E,4MACnBC,MAAQ,CACNC,IAAK,KACLC,KAAM,GACNC,MAAO,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,QACxCC,QAAS,KACTC,QAAS,OACTC,gBAAiB,KAEjBC,SAAU,KACVC,UAAW,KACXC,OAAO,EACPC,SAAS,G,EAGXC,gBAAkB,SAACC,GACjB,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,cAAcN,GACrBI,EAAOG,OAAS,WACd,IAAIC,EAAeJ,EAAOK,OAAOnD,WAAWoD,QAAQ,eAAgB,IAChEF,EAAarD,OAAS,EAAI,IAC5BqD,GAAgB,IAAIG,OAAO,EAAKH,EAAarD,OAAS,IAExD+C,EAAQM,IAEVJ,EAAOQ,QAAU,SAACC,GAChBV,EAAOU,Q,EAKbC,aAAe,SAACC,GACd,GAAIA,EAAEC,OAAOC,OAASF,EAAEC,OAAOC,MAAM9D,OAAS,EAAG,CAC/C,IAAMiD,EAAS,IAAIC,WACnBD,EAAOc,iBAAiB,QAAQ,WAC9B,EAAKC,SAAS,CAAE9B,IAAKe,EAAOK,SAC5B,EAAKU,SAAS,CAAExB,SAAUoB,EAAEC,OAAOC,MAAM,QAG3Cb,EAAOE,cAAcS,EAAEC,OAAOC,MAAM,IAGpC,EAAKE,SAAS,CAAEzB,gBAAiB,OACjC,EAAKyB,SAAS,CAAExB,SAAU,OAC1B,EAAKwB,SAAS,CAAE7B,KAAM,KACtB,EAAK6B,SAAS,CAAEvB,UAAW,S,EAK/BwB,cAAgB,SAACC,GACf,EAAKC,SAAWD,G,EAGlBE,eAAiB,SAACjC,GAEhB,EAAKkC,eAAelC,I,EAGtBmC,aAAe,SAACnC,GAGd,EAAK6B,SAAS,CAAE7B,U,EAGlBoC,WAAa,SAACX,GAGZ,IAAIY,EAAkB,IAAIC,KAAKb,GAC3Bc,EAAUd,EAAEnD,MAAM,KAelBkE,EAde,CACjB,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAE8BH,EAAgBI,YAE5CC,EAAO,UAAMF,EAAN,YAAwBG,SAASJ,EAAQ,IAAzC,YAAgDA,EAAQ,IAEnE,EAAKV,SAAS,CAAE3B,QAASwC,K,EAiB3BE,aAAe,SAACC,GACd,EAAKhB,SAAS,CAAEtB,MAAOsC,K,EAIzBC,gB,uCAAkB,WAAOrB,GAAP,mBAAAsB,EAAA,yDACRC,EAAsBC,2CAC1B,EAAKnD,MAAMI,QAFC,wBAGd,EAAK2B,SAAS,CAAErB,SAAS,IACzBiB,EAAEyB,iBACF,EAAKN,cAAa,GALJ,SAOG,EAAKnC,gBAAgB,EAAKX,MAAMO,UAPnC,OAOV8C,EAPU,OAQVC,EAAM,CACRC,MAAO,EAAKvD,MAAMK,QAClBmD,MAAO,EAAKxD,MAAMI,QAClBqD,MAAOJ,GAETK,MAAMR,EAAmB,CACvBS,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUT,KAEpBU,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAU,EAAKC,WAAWD,MAC/BE,OAAM,SAAC5C,GACN,EAAK6C,WAAW7C,MAvBN,wBAyBT,EAAKqB,cAAa,GAzBT,4C,iJAnBlB,WAAqB5C,GAArB,eAAA+C,EAAA,2DACMsB,KAAKrC,UAAYhC,EAAKL,OAASK,EAAKJ,QAD1C,gCAEkCyE,KAAKC,cACjCD,KAAKrC,SACLhC,EACA,gBALN,OAEUI,EAFV,OAOIiE,KAAKxC,SAAS,CAAEzB,oBAPpB,gD,+EA+CA,SAAWmB,GACThB,MAAM,6DAA+DgB,GACrE8C,KAAKxC,SAAS,CAAErB,SAAS,M,wBAG3B,SAAW+D,GACTF,KAAKxC,SAAS,CAAEvB,UAAWiE,EAAQ/D,SAAS,M,2BAK9C,SAAcuB,EAAO/B,EAAMwE,GAAW,IAAD,OAC7BC,EAAS3H,SAAS4H,cAAc,UAChCC,EAAS5C,EAAM6C,aAAe7C,EAAMpC,MACpCkF,EAAS9C,EAAM+C,cAAgB/C,EAAMnC,OAiB3C,OAhBA6E,EAAO9E,MAAQK,EAAKL,MACpB8E,EAAO7E,OAASI,EAAKJ,OACT6E,EAAOM,WAAW,MAE1BC,UACFjD,EACA/B,EAAKiF,EAAIN,EACT3E,EAAKkF,EAAIL,EACT7E,EAAKL,MAAQgF,EACb3E,EAAKJ,OAASiF,EACd,EACA,EACA7E,EAAKL,MACLK,EAAKJ,QAGA,IAAIe,SAAQ,SAACC,EAASC,GAC3B4D,EAAOU,QAAO,SAACC,GACRA,IAKLA,EAAKC,KAAOb,EACZc,OAAOC,IAAIC,gBAAgB,EAAKC,SAEhC,EAAKA,QAAUH,OAAOC,IAAIG,gBAAgBN,GAC1C,EAAKvD,SAAS,CAAExB,SAAU+E,IAC1BxE,EAAQ,EAAK6E,YACZ,mB,oBAIP,WAAU,IAAD,SASHpB,KAAKvE,MAPPE,EAFK,EAELA,KACAI,EAHK,EAGLA,gBACAL,EAJK,EAILA,IACAE,EALK,EAKLA,MACAK,EANK,EAMLA,UACAC,EAPK,EAOLA,MACAC,EARK,EAQLA,QAEF,OACE,sBAAKhE,GAAG,WAAR,UACE,cAAC,EAAD,IACA,uBAAMrB,UAAU,aAAawK,aAAa,MAA1C,UACE,sBAAKxK,UAAU,WAAf,UACE,sBAAKA,UAAU,sBAAf,UACE,uBAAOyK,QAAQ,aAAazK,UAAU,iBAAtC,wBAGA,wBACEqB,GAAG,aACHrB,UAAU,eACV0K,SAAU,SAACpE,GACT,EAAKI,SAAS,CAAE1B,QAASsB,EAAEC,OAAO1E,SAJtC,SAOGiD,EAAMzB,KAAI,SAACsH,GAAD,OACT,wBAAmB9I,MAAO8I,EAA1B,SACGA,GADUA,WAOnB,sBAAK3K,UAAU,sBAAf,UACE,uBAAOyK,QAAQ,aAAazK,UAAU,iBAAtC,uBAGA,uBACEA,UAAU,eACViB,KAAK,OACLyJ,SAAU,SAACpE,GAAD,OAAO,EAAKW,WAAWX,EAAEC,OAAO1E,QAC1CR,GAAG,eAEJ+D,GACC,sBAAKpF,UAAU,iDAAf,UACE,+CADF,4BAEE,wBACEiB,KAAK,SACLjB,UAAU,QACV4K,aAAW,QACX9J,QAAS,kBAAM,EAAK2G,cAAa,IAJnC,SAME,sBAAMoD,cAAY,OAAlB,6BAMV,qBAAK7K,UAAU,WAAf,SACE,sBAAKA,UAAU,aAAf,UACE,wBAAOA,UAAU,KAAKyK,QAAQ,aAA9B,UACE,sBAAMzK,UAAU,oBAAhB,kBADF,mCAIA,uBACEiB,KAAK,OACL6J,OAAO,UACPJ,SAAU,SAACpE,GAAD,OAAO,EAAKD,aAAaC,IACnCtG,UAAU,oBACVqB,GAAG,eAEJuD,GACC,eAAC,IAAM1C,SAAP,WACE,cAAC,IAAD,CACE0C,IAAKA,EACLC,KAAMA,EACNkG,cAAY,EACZpE,cAAeuC,KAAKvC,cACpBqE,WAAY9B,KAAKpC,eACjB4D,SAAUxB,KAAKlC,eAEjB,oBAAGhH,UAAU,KAAb,UACE,sBAAMA,UAAU,oBAAhB,kBADF,gHAMCiF,GACC,qBACEjF,UAAU,UACViL,IAAI,OACJrK,MAAO,CAAEsK,SAAU,QACnBtG,IAAKK,IAGT,wBACEhE,KAAK,SACLjB,UAAU,wCACVc,QAAS,SAACwF,GAAD,OAAO,EAAKqB,gBAAgBrB,IAHvC,gCAYTjB,EACC,qBAAKrF,UAAU,2DACb,KACHmF,GAAa,cAAC,EAAD,CAAQ5D,QAAS4D,W,GA1SFgG,a,gCCPtB,MAA0B,+BCsD1BC,EAlDA,WACb,OACE,yBACEpL,UAAU,qCACVY,MAAO,CAAEqD,UAAW,QAFtB,UAIE,oBAAIrD,MAAO,CAAE4D,MAAO,SACpB,yBAASxE,UAAU,cAAnB,SACE,sBAAKA,UAAU,MAAf,UACE,sBAAKA,UAAU,SAAf,UACE,qBAAK4E,IAAKyG,EAAMJ,IAAI,OAAOxG,OAAO,KAAKD,MAAM,OAC7C,mBAAGxE,UAAU,OAAb,+CACA,mBAAGA,UAAU,GAAb,mCAEF,sBAAKA,UAAU,SAAf,UACE,mBAAGA,UAAU,YAAb,gCACA,mBACEsL,KAAK,0CACLtL,UAAU,iBAFZ,SAIE,cAAC,IAAD,CAAUmB,KAAM,OAElB,mBACEmK,KAAK,2DACLtL,UAAU,kBAFZ,SAIE,cAAC,IAAD,CAASmB,KAAM,OAEjB,mBAAGmK,KAAK,2BAA2BtL,UAAU,kBAA7C,SACE,cAAC,IAAD,CAAQmB,KAAM,UAGlB,sBAAKnB,UAAU,UAAf,UACE,mBAAGA,UAAU,YAAb,qBACA,sBAAKA,UAAU,OAAf,UACE,cAAC,IAAD,CAAMkB,MAAM,UAAUC,KAAM,KAC5B,mBAAGmK,KAAK,+BAA+BtL,UAAU,QAAjD,4CAOR,qBAAKA,UAAU,cAAf,SACE,sBAAMA,UAAU,aAAhB,0DC7BOuL,EAZF,WACX,OACE,eAAC,IAAMrJ,SAAP,WACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCGSsJ,EAjBE,WACf,OACE,sBACE5K,MAAO,CACLsD,SAAU,WACVG,IAAK,MACLC,KAAM,MACNmH,YAAa,OACbC,UAAW,yBANf,UASE,qDACA,mBAAG1L,UAAU,OAAb,8DCKS2L,MAXf,WACE,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOtL,OAAK,EAACuL,KAAK,IAAIC,UAAWN,IACjC,cAAC,IAAD,CAAOM,UAAWL,UCCXM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrD,MAAK,YAAkD,IAA/CsD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF7K,SAASC,eAAe,SAM1BkK,M","file":"static/js/main.eb7f24bf.chunk.js","sourcesContent":["import { Link } from \"react-scroll\";\r\n\r\nconst HeroSection = () => {\r\n  return (\r\n    <div className=\"jumbotron jumbotron-fluid mt-5\">\r\n      <div className=\"container\">\r\n        <h1 className=\"display-4\">Lotto Checker</h1>\r\n        <p className=\"lead\">\r\n          Want to take your lotto checking to the next NEXT level?\r\n        </p>\r\n        <Link\r\n          className=\"btn btn-outline-success btn-lg\"\r\n          to=\"services\"\r\n          smooth={true}\r\n          duration={500}\r\n          spy={true}\r\n          exact=\"true\"\r\n          activeClass=\"active\"\r\n          offset={-80}\r\n        >\r\n          Try it Now!\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HeroSection;\r\n","import React, { useState } from \"react\";\r\nimport { List, X } from \"react-bootstrap-icons\";\r\nimport { Link, animateScroll as scroll } from \"react-scroll\";\r\n\r\nconst Navigation = () => {\r\n  const [menuToggled, setToggled] = useState(true);\r\n\r\n  return (\r\n    <nav className={\" navbar fixed-top navbar-expand-lg navbar-dark bg-dark\"}>\r\n      <div className=\"container-fluid\">\r\n        <a\r\n          className=\"navbar-brand soc\"\r\n          style={{ fontSize: \"1.5rem\" }}\r\n          onClick={scroll.scrollToTop}\r\n        >\r\n          LCR\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler float-right\"\r\n          type=\"button\"\r\n          onClick={() => setToggled(!menuToggled)}\r\n        >\r\n          {menuToggled ? (\r\n            <List color=\"white\" size={25} />\r\n          ) : (\r\n            <X color=\"white\" size={25} />\r\n          )}\r\n        </button>\r\n        <div\r\n          className={(menuToggled ? \"\" : \"show\") + \" collapse navbar-collapse\"}\r\n        >\r\n          <ul className=\"navbar-nav  \">\r\n            <li>\r\n              <Link\r\n                className=\"nav-link  \"\r\n                to=\"about\"\r\n                smooth={true}\r\n                duration={500}\r\n                spy={true}\r\n                exact=\"true\"\r\n                activeClass=\"active\"\r\n                offset={-90}\r\n              >\r\n                About\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link\r\n                className=\"nav-link \"\r\n                to=\"services\"\r\n                smooth={true}\r\n                duration={500}\r\n                spy={true}\r\n                exact=\"true\"\r\n                activeClass=\"active\"\r\n                offset={-80}\r\n              >\r\n                Checker\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import \"./page.css\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <div className=\"container mt-4\" id=\"about\">\r\n      <h4 className=\"text-center\">Check your lotto tickets instantly!</h4>\r\n      <p className=\"text-center lead\">\r\n        This tool is powered by Optical Character Recognition.<br></br> Created\r\n        with the purpose of helping Filipinos to reduce time on checking lotto\r\n        tickets.\r\n      </p>\r\n\r\n      <div className=\"card-deck mb-3  text-center\">\r\n        <div className=\"col-lg\">\r\n          <div className=\"card mb-4 box-shadow \">\r\n            <div className=\"card-header\">\r\n              <h4 className=\"my-0 font-weight-normal\">Free</h4>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <p className=\"card-text p-3 lead\">\r\n                No absurd fees, but you have the option to donate for our\r\n                services if you like!\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-lg\">\r\n          <div className=\"card mb-4 box-shadow \">\r\n            <div className=\"card-header\">\r\n              <h4 className=\"my-0 font-weight-normal\">Simple</h4>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <p className=\"card-text lead p-3\">\r\n                No complex instructions, just take a picture and you're done!\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-lg\">\r\n          <div className=\"card mb-4 box-shadow \">\r\n            <div className=\"card-header\">\r\n              <h4 className=\"my-0 font-weight-normal\">Efficient</h4>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <p className=\"card-text p-3 lead\">\r\n                We'll get you your winning numbers with an acceptable degree of\r\n                accuracy!\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <p className=\" text-center text-muted\">\r\n        *We are not affiliated with the PCSO, this is merely a tool used for\r\n        checking PCSO lotto tickets. You must be at least 18 years old to buy a\r\n        lotto ticket or claim your winnings as stated by PCSO lotto rule.\r\n        Lastly, we are NOT responsible for your actions.*\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nconst Result = ({ resJson }) => {\r\n  const [newwin, setWin] = useState(null);\r\n\r\n  useEffect(() => {\r\n    document.getElementById(\"user-nums-ocr\").value = convertToText(resJson.ocr);\r\n    setWin(convertToText(resJson.yourwin));\r\n  }, [resJson.ocr, resJson.yourwin]);\r\n\r\n  const FailedCheckWin = () => {\r\n    return (\r\n      <React.Fragment>\r\n        <p className=\"h6\">\r\n          <span className=\" badge badge-danger\">Error:</span> Could not find\r\n          winning numbers for lotto {resJson.type} with date {resJson.date}.\r\n          Please try changing lotto type or the draw date.\r\n        </p>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  const CheckWinTrue = () => {\r\n    return (\r\n      <p>\r\n        <span className=\"h6 pt-1\">Winning Numbers:</span> {resJson.win} (In any\r\n        order)\r\n      </p>\r\n    );\r\n  };\r\n\r\n  const convertToText = (resObj) => {\r\n    var txt = \"\";\r\n    resObj.forEach((element) => {\r\n      if (element.length === 0) txt += \"None\";\r\n      element.forEach((nxtElem, i) => {\r\n        if (i + 1 === element.length) txt += nxtElem.toString();\r\n        else txt += nxtElem.toString() + \"-\";\r\n      });\r\n      txt += \"\\n\";\r\n    });\r\n    //console.log(txt);\r\n    return txt;\r\n  };\r\n\r\n  const RecheckNumbers = (yournum, win) => {\r\n    var row = yournum.split(\"\\n\");\r\n    var winNum = win.split(\"-\").map(Number);\r\n    var txt = [];\r\n    row.forEach((rowVal) => {\r\n      var rowInt = rowVal.split(\"-\").map(Number);\r\n      var temp = [];\r\n      rowInt.some((arr) => {\r\n        if (winNum.includes(arr)) {\r\n          temp.push(arr);\r\n        }\r\n      });\r\n      txt.push(temp);\r\n    });\r\n    // console.log(txt);\r\n    // console.log(win);\r\n    setWin(convertToText(txt));\r\n  };\r\n\r\n  return (\r\n    <form className=\"container\">\r\n      {resJson.win === \"404\" ? <FailedCheckWin /> : <CheckWinTrue />}\r\n      <div className=\"row\">\r\n        <p className=\"col-md \">\r\n          <span className=\"h6\">Lotto Type:</span> {resJson.type}\r\n        </p>\r\n        <p className=\"col-md\">\r\n          <span className=\"h6\">Draw Date:</span> {resJson.date}\r\n        </p>\r\n      </div>\r\n      <div className=\"form-row \">\r\n        <div className=\"form-group col-md\">\r\n          <h6>Your Numbers</h6>\r\n          <textarea\r\n            className=\"form-control\"\r\n            id=\"user-nums-ocr\"\r\n            rows=\"6\"\r\n            cols=\"50\"\r\n          ></textarea>\r\n        </div>\r\n        <div className=\"form-group col-md\">\r\n          <h6>Your Winning Numbers</h6>\r\n          <textarea\r\n            readOnly\r\n            className=\"form-control\"\r\n            id=\"user-nums-correct\"\r\n            rows=\"6\"\r\n            cols=\"50\"\r\n            value={newwin ? newwin : convertToText(resJson.yourwin)}\r\n          ></textarea>\r\n        </div>\r\n      </div>\r\n      <p className=\"h6\">\r\n        <span className=\" badge badge-warning\">Notice:</span> If there are any\r\n        incorrect numbers identified, please manually input your lotto numbers\r\n        seperated by (-) in the text box provided and click the Recheck button\r\n        or by changing the crop of the image and click the Analyze button.\r\n      </p>\r\n\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-outline-primary mr-1 col-md-2 mb-3 mt-2\"\r\n        onClick={() =>\r\n          RecheckNumbers(\r\n            document.getElementById(\"user-nums-ocr\").value.trim(),\r\n            resJson.win\r\n          )\r\n        }\r\n      >\r\n        Recheck\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Result;\r\n","import ReactPlayer from \"react-player\";\r\n\r\nconst How = () => {\r\n  return (\r\n    <div className=\"container mb-4\" style={{ marginTop: \"20px\" }} id=\"services\">\r\n      <h4 className=\"text-center\">How to Use</h4>\r\n      <p className=\"text-center lead\">\r\n        Follow this quick tutorial below to learn more.\r\n      </p>\r\n      <div style={{ position: \"relative\", paddingTop: \"40%\" }}>\r\n        <ReactPlayer\r\n          controls\r\n          style={{ position: \"absolute\", top: \"0\", left: \"0\" }}\r\n          url=\"https://youtu.be/8YW_xtmHiCI\"\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default How;\r\n","import ReactCrop from \"react-image-crop\";\r\nimport \"react-image-crop/dist/ReactCrop.css\";\r\nimport React, { Component } from \"react\";\r\nimport Result from \"./Result\";\r\nimport How from \"./How\";\r\nimport \"./page.css\";\r\n\r\nexport default class Service extends Component {\r\n  state = {\r\n    src: null,\r\n    crop: \"\",\r\n    typeL: [\"6-42\", \"6-45\", \"6-49\", \"6-55\", \"6-58\"],\r\n    getDate: null,\r\n    typeVal: \"6-42\",\r\n    croppedImageUrl: null,\r\n    //curr64: null,\r\n    currBlob: null,\r\n    resultObj: null,\r\n    alert: false,\r\n    loading: false,\r\n  };\r\n\r\n  convertToBase64 = (file) => {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => {\r\n        var base64String = reader.result.toString().replace(/^data:(.*,)?/, \"\");\r\n        if (base64String.length % 4 > 0) {\r\n          base64String += \"=\".repeat(4 - (base64String.length % 4));\r\n        }\r\n        resolve(base64String);\r\n      };\r\n      reader.onerror = (error) => {\r\n        reject(error);\r\n      };\r\n    });\r\n  };\r\n\r\n  onSelectFile = (e) => {\r\n    if (e.target.files && e.target.files.length > 0) {\r\n      const reader = new FileReader();\r\n      reader.addEventListener(\"load\", () => {\r\n        this.setState({ src: reader.result });\r\n        this.setState({ currBlob: e.target.files[0] });\r\n      });\r\n\r\n      reader.readAsDataURL(e.target.files[0]);\r\n\r\n      //reset things if new image\r\n      this.setState({ croppedImageUrl: null });\r\n      this.setState({ currBlob: null });\r\n      this.setState({ crop: \"\" });\r\n      this.setState({ resultObj: null });\r\n    }\r\n  };\r\n\r\n  // If you setState the crop in here you should return false.\r\n  onImageLoaded = (image) => {\r\n    this.imageRef = image;\r\n  };\r\n\r\n  onCropComplete = (crop) => {\r\n    //console.log(crop + \"completed cropping\");\r\n    this.makeClientCrop(crop);\r\n  };\r\n\r\n  onCropChange = (crop) => {\r\n    // You could also use percentCrop:\r\n    // this.setState({ crop: percentCrop });\r\n    this.setState({ crop });\r\n  };\r\n\r\n  formatDate = (e) => {\r\n    //month/dd/yyyy\r\n\r\n    var unconvertedDate = new Date(e);\r\n    var dateArr = e.split(\"-\");\r\n    const monthsList = [\r\n      \"january\",\r\n      \"february\",\r\n      \"march\",\r\n      \"april\",\r\n      \"may\",\r\n      \"june\",\r\n      \"july\",\r\n      \"august\",\r\n      \"september\",\r\n      \"october\",\r\n      \"november\",\r\n      \"december\",\r\n    ];\r\n    var convertedMonth = monthsList[unconvertedDate.getMonth()];\r\n\r\n    var newDate = `${convertedMonth}-${parseInt(dateArr[2])}-${dateArr[0]}`;\r\n\r\n    this.setState({ getDate: newDate });\r\n  };\r\n\r\n  async makeClientCrop(crop) {\r\n    if (this.imageRef && crop.width && crop.height) {\r\n      const croppedImageUrl = await this.getCroppedImg(\r\n        this.imageRef,\r\n        crop,\r\n        \"newFile.jpeg\"\r\n      );\r\n      this.setState({ croppedImageUrl });\r\n\r\n      //this.convertCurrBlobToBase64();\r\n      //console.log(croppedImageUrl + \"i should change\");\r\n    }\r\n  }\r\n\r\n  triggerAlert = (val) => {\r\n    this.setState({ alert: val });\r\n    //console.log(this.state.alert);\r\n  };\r\n\r\n  onSubmitClicked = async (e) => {\r\n    const { REACT_APP_API_URL } = process.env;\r\n    if (this.state.getDate) {\r\n      this.setState({ loading: true });\r\n      e.preventDefault();\r\n      this.triggerAlert(false);\r\n      //console.log(this.state.currBlob + \" curr blob\");\r\n      var val3 = await this.convertToBase64(this.state.currBlob);\r\n      var obj = {\r\n        test1: this.state.typeVal,\r\n        test2: this.state.getDate,\r\n        test3: val3,\r\n      };\r\n      fetch(REACT_APP_API_URL, {\r\n        method: \"post\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(obj),\r\n      })\r\n        .then((response) => response.json())\r\n        .then((data) => this.getJsonObj(data))\r\n        .catch((error) => {\r\n          this.failedLoad(error);\r\n        });\r\n    } else this.triggerAlert(true);\r\n  };\r\n\r\n  failedLoad(error) {\r\n    alert(\"Error the page took too long to load!\\nPlease try again.\\n\" + error);\r\n    this.setState({ loading: false });\r\n  }\r\n\r\n  getJsonObj(object) {\r\n    this.setState({ resultObj: object, loading: false });\r\n\r\n    //console.log(object);\r\n  }\r\n\r\n  getCroppedImg(image, crop, fileName) {\r\n    const canvas = document.createElement(\"canvas\");\r\n    const scaleX = image.naturalWidth / image.width;\r\n    const scaleY = image.naturalHeight / image.height;\r\n    canvas.width = crop.width;\r\n    canvas.height = crop.height;\r\n    const ctx = canvas.getContext(\"2d\");\r\n\r\n    ctx.drawImage(\r\n      image,\r\n      crop.x * scaleX,\r\n      crop.y * scaleY,\r\n      crop.width * scaleX,\r\n      crop.height * scaleY,\r\n      0,\r\n      0,\r\n      crop.width,\r\n      crop.height\r\n    );\r\n\r\n    return new Promise((resolve, reject) => {\r\n      canvas.toBlob((blob) => {\r\n        if (!blob) {\r\n          //reject(new Error('Canvas is empty'));\r\n          //console.error(\"Canvas is empty\");\r\n          return;\r\n        }\r\n        blob.name = fileName;\r\n        window.URL.revokeObjectURL(this.fileUrl);\r\n\r\n        this.fileUrl = window.URL.createObjectURL(blob);\r\n        this.setState({ currBlob: blob });\r\n        resolve(this.fileUrl);\r\n      }, \"image/jpeg\");\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      crop,\r\n      croppedImageUrl,\r\n      src,\r\n      typeL,\r\n      resultObj,\r\n      alert,\r\n      loading,\r\n    } = this.state;\r\n    return (\r\n      <div id=\"services\">\r\n        <How />\r\n        <form className=\"container \" autoComplete=\"off\">\r\n          <div className=\"form-row\">\r\n            <div className=\"form-group col-md-2\">\r\n              <label htmlFor=\"lotto-type\" className=\"col-form-label\">\r\n                Lotto Type\r\n              </label>\r\n              <select\r\n                id=\"lotto-type\"\r\n                className=\"form-control\"\r\n                onChange={(e) => {\r\n                  this.setState({ typeVal: e.target.value });\r\n                }}\r\n              >\r\n                {typeL.map((item) => (\r\n                  <option key={item} value={item}>\r\n                    {item}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"form-group col-md-3\">\r\n              <label htmlFor=\"lotto-date\" className=\"col-form-label\">\r\n                Draw Date\r\n              </label>\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"date\"\r\n                onChange={(e) => this.formatDate(e.target.value)}\r\n                id=\"lotto-date\"\r\n              />\r\n              {alert && (\r\n                <div className=\"alert alert-danger alert-dismissible fade show\">\r\n                  <strong>Required!</strong> field must not be empty.\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"close\"\r\n                    aria-label=\"Close\"\r\n                    onClick={() => this.triggerAlert(false)}\r\n                  >\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                  </button>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div className=\"form-group\">\r\n              <label className=\"h6\" htmlFor=\"img-upload\">\r\n                <span className=\" badge badge-info\">Tip:</span> Upload image of\r\n                lotto ticket\r\n              </label>\r\n              <input\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={(e) => this.onSelectFile(e)}\r\n                className=\"form-control-file\"\r\n                id=\"img-upload\"\r\n              />\r\n              {src && (\r\n                <React.Fragment>\r\n                  <ReactCrop\r\n                    src={src}\r\n                    crop={crop}\r\n                    ruleOfThirds\r\n                    onImageLoaded={this.onImageLoaded}\r\n                    onComplete={this.onCropComplete}\r\n                    onChange={this.onCropChange}\r\n                  />\r\n                  <p className=\"h6\">\r\n                    <span className=\" badge badge-info\">Tip:</span> Crop only\r\n                    the section where the lotto numbers are found. And please\r\n                    use clear image to make OCR accurate.\r\n                  </p>\r\n\r\n                  {croppedImageUrl && (\r\n                    <img\r\n                      className=\"row p-3\"\r\n                      alt=\"Crop\"\r\n                      style={{ maxWidth: \"100%\" }}\r\n                      src={croppedImageUrl}\r\n                    />\r\n                  )}\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-outline-primary mr-1 col-md-2\"\r\n                    onClick={(e) => this.onSubmitClicked(e)}\r\n                  >\r\n                    Analyze\r\n                  </button>\r\n                </React.Fragment>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </form>\r\n        {loading ? (\r\n          <div className=\"container d-flex justify-content-center spin mt-4 mb-4\"></div>\r\n        ) : null}\r\n        {resultObj && <Result resJson={resultObj} />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/B1.1a243142.svg\";","import { Cash, Facebook, Github, Youtube } from \"react-bootstrap-icons\";\r\nimport \"./page.css\";\r\nimport logo from \"../images/B1.svg\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer\r\n      className=\"bg-light text-center text-lg-start\"\r\n      style={{ marginTop: \"50px\" }}\r\n    >\r\n      <hr style={{ width: \"90%\" }} />\r\n      <section className=\"mb-1 col-md\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md\">\r\n            <img src={logo} alt=\"logo\" height=\"35\" width=\"35\"></img>\r\n            <p className=\"mb-1\">This web tool is developed using:</p>\r\n            <p className=\"\">React.JS and Flask</p>\r\n          </div>\r\n          <div className=\"col-md\">\r\n            <p className=\"lead mb-2\">Social Media Links</p>\r\n            <a\r\n              href=\"https://www.facebook.com/johnnyplusplus\"\r\n              className=\"p-3 soc socFb \"\r\n            >\r\n              <Facebook size={25} />\r\n            </a>\r\n            <a\r\n              href=\"https://www.youtube.com/channel/UCGLli1v5KhVhIEotaaQrHbA\"\r\n              className=\" p-3 soc socYot\"\r\n            >\r\n              <Youtube size={25} />\r\n            </a>\r\n            <a href=\"https://github.com/10tus\" className=\" p-3 soc socGit\">\r\n              <Github size={25} />\r\n            </a>\r\n          </div>\r\n          <div className=\"col-md \">\r\n            <p className=\"lead mb-2\">Support</p>\r\n            <div className=\"pb-4\">\r\n              <Cash color=\"#6D696A\" size={25} />\r\n              <a href=\" https://ko-fi.com/lotusdevs\" className=\"m-4  \">\r\n                ko-fi.com/lotusdevs\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <div className=\"p-3 bg-dark\">\r\n        <span className=\"text-light\">© 2021 Copyright: LotusDevsByJohnny</span>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport HeroSection from \"../components/HeroSection\";\r\nimport Navigation from \"../components/Navigation\";\r\nimport About from \"../components/About\";\r\nimport Service from \"../components/Service\";\r\nimport Footer from \"../components/Footer\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Navigation />\r\n      <HeroSection />\r\n      <About />\r\n      <Service />\r\n      <Footer />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","const NotFound = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        position: \"absolute\",\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        marginRight: \"-50%\",\r\n        transform: \"translate(-50%, -50%)\",\r\n      }}\r\n    >\r\n      <h1>404 Page Not Found!</h1>\r\n      <p className=\"lead\">go back to reality ples? Nothing to see here</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Home from \"./pages\";\nimport NotFound from \"./components/NotFound\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route component={NotFound} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}